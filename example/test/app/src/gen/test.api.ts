// Code generated by protoc-gen-rtk-query. DO NOT EDIT.
// source: test.proto

import { createApi } from '@reduxjs/toolkit/query/react'
import { GrpcWebFetchTransport, GrpcWebOptions } from '@protobuf-ts/grpcweb-transport';
import { grpcBaseQuery, providesList, GrpcBaseQueryMeta, WithMetadata } from '@greatliontech/protobuf-ts-rtk-query';
import { HelloServiceClient } from './test_pb.client'
import { HelloRequest, HelloResponse } from './test_pb'

export const grpcWebOptions: GrpcWebOptions = {
  baseUrl: 'http://localhost:8080'
}

const transport = new GrpcWebFetchTransport(grpcWebOptions);

const helloServiceClient = new HelloServiceClient(transport)

// Define a service using a base URL and expected endpoints
export const helloService = createApi({
  reducerPath: 'helloService',
  baseQuery: grpcBaseQuery(),
  endpoints: (builder) => ({
    getHello: builder.query<WithMetadata<HelloResponse>, HelloRequest>({
      query: (req) => helloServiceClient.getHello(req),
      transformResponse(baseQueryReturnValue: HelloResponse, meta: GrpcBaseQueryMeta, arg) {
        return {
          ...baseQueryReturnValue,
          grpcQueryMetadata: meta
        }
      },
    }),
  }),
})

// Export hooks for usage in function components, which are
// auto-generated based on the defined endpoints
export const {
  useGetHelloQuery,
} = helloService

